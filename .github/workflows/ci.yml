# @prettier
name: ci

on: [push, pull_request]

jobs:
  build:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.9' ]
        django-version: [ '2.2' ]
        asgiref-version: [ '3.2.10' ]
        # python-version: [ '3.9' ]
        # django-version: [ '2.2', '3.1', '3.2', '4.0' ]
        # asgiref-version: [ '3.2.10', '3.3.4', '3.4.1' ]

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}-python-${{ matrix.python-version }}-django-${{ matrix.django-version}}-asgiref-${{ matrix.asgiref-version }}
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Get full Python version
      id: full-python-version
      shell: bash
      run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

    - name: Install poetry
      run: |
        curl -O -sSL https://install.python-poetry.org/install-poetry.py
        python install-poetry.py -y --version 1.1.12
        echo "PATH=${HOME}/.poetry/bin:${PATH}" >> $GITHUB_ENV
        rm install-poetry.py

    - name: Add ~/.local/bin to PATH
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Get poetry cache paths from config
      run: |
        echo "poetry_cache_dir=$(poetry config --list | sed -n 's/.*cache-dir = //p' | sed -e 's/^\"//' -e 's/\"$//')" >> $GITHUB_ENV
        echo "poetry_virtualenvs_path=$(poetry config --list | sed -n 's/.*virtualenvs.path = .* # //p' | sed -e 's/^\"//' -e 's/\"$//')" >> $GITHUB_ENV

    - name: Configure poetry
      shell: bash
      run: poetry config virtualenvs.in-project true

    - name: Set up cache
      uses: actions/cache@v2
      id: cache
      with:
        path: |
          .venv
          ${{ env.poetry_cache_dir }}
          ${{ env.poetry_virtualenvs_path }}
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Ensure cache is healthy
      if: steps.cache.outputs.cache-hit == 'true'
      shell: bash
      run: poetry run pip --version >/dev/null 2>&1 || rm -rf .venv

    - name: Upgrade pip
      shell: bash
      run: poetry run python -m pip install pip -U

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          PY_VERSION: ${{ matrix.python-version }}
          ASGIREF_VERSION: ${{ matrix.asgi-version }}
          DJANGO_VERSION: ${{ matrix.django-version }}
